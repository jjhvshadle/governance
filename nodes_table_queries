# Print the most recent file path
cat("Opening most recent SQLite file:", most_recent_file, "\n")

# Open a connection to the most recent SQLite file
conn <- dbConnect(RSQLite::SQLite(), most_recent_file)

# Check if "nodes" table exists
tables <- dbListTables(conn)
if ("nodes" %in% tables) {
  
  # Query the "nodes" table for unique node_name and attribute_name combinations
  query_unique <- "SELECT DISTINCT node_name, attribute_name FROM nodes"
  unique_nodes_df <- dbGetQuery(conn, query_unique)

  # Add scan_date if it does not exist
  if (!"scan_date" %in% colnames(unique_nodes_df)) {
    unique_nodes_df$scan_date <- Sys.Date()
    cat("Added 'scan_date' column to unique nodes data.\n")
  }
  
  # Save the unique rows to a CSV file
  csv_file_unique <- paste0(dir_path, "/", "unique_nodes_data_", Sys.Date(), ".csv")
  write_csv(unique_nodes_df, file = csv_file_unique)
  cat("Unique nodes data saved to:", csv_file_unique, "\n")

  # Query the "nodes" table for rows where node_name and attribute_name match specific conditions
  # src nodes
  query_src <- "SELECT * 
                FROM nodes 
                WHERE ((node_name = 'script' AND attribute_name = 'src') 
                  OR (node_name = 'iframe' AND attribute_name = 'src') 
                  OR (node_name = 'img' AND attribute_name = 'src'))
                  AND LOWER(attribute_value) NOT LIKE '%media/themes/mho/medstar%'
                  AND LOWER(attribute_value) NOT LIKE '%media/project/mho%'
                  AND LOWER(attribute_value) NOT LIKE '%fonts.gstatic%'"
  nodes_df <- dbGetQuery(conn, query_src)

  # Create separate columns for each type of src
  nodes_df$script_src <- ifelse(nodes_df$node_name == 'script' & nodes_df$attribute_name == 'src', nodes_df$attribute_value, NA)
  nodes_df$iframe_src <- ifelse(nodes_df$node_name == 'iframe' & nodes_df$attribute_name == 'src', nodes_df$attribute_value, NA)
  nodes_df$img_src <- ifelse(nodes_df$node_name == 'img' & nodes_df$attribute_name == 'src', nodes_df$attribute_value, NA)
  
  # Add scan_date if it does not exist
  if (!"scan_date" %in% colnames(nodes_df)) {
    nodes_df$scan_date <- Sys.Date()
    cat("Added 'scan_date' column to src nodes data.\n")
  }

  # Save the result to a CSV file
  csv_file_src <- paste0(dir_path, "/", "all_scripts_df_", Sys.Date(), ".csv")
  write_csv(nodes_df, file = csv_file_src)
  cat("Filtered nodes data saved to:", csv_file_src, "\n")
  
  # form nodes
  query_form <- "SELECT * 
                FROM nodes 
                WHERE (node_name = 'form' AND attribute_name = 'id')"
  form_nodes_df <- dbGetQuery(conn, query_form)

  # Add scan_date if it does not exist
  if (!"scan_date" %in% colnames(form_nodes_df)) {
    form_nodes_df$scan_date <- Sys.Date()
    cat("Added 'scan_date' column to form nodes data.\n")
  }

  # Save the result to a CSV file
  csv_file_src <- paste0(dir_path, "/", "nodes_form_data_", Sys.Date(), ".csv")
  write_csv(form_nodes_df, file = csv_file_src)
  cat("Filtered nodes data saved to:", csv_file_src, "\n")
} else {
  cat("The table 'nodes' does not exist in the database.\n")
}

# Disconnect when done
dbDisconnect(conn)
cat("Connection closed.\n")
